{"/_index-copy/":{"data":{"":" Free, open source Build modern websites¬†with Markdown and Hugo Fast, batteries-included Hugo theme¬†for creating beautiful static websites Get Started Fast and Full-featured Simple and easy to use, yet powerful and feature-rich.\nMarkdown is All You Need Compose with just Markdown. Enrich with Shortcode components.\nFull Text Search Built-in full text search with FlexSearch, no extra setup required.\nLightweight as a Feather No dependency or Node.js is needed to use Hextra. Powered by Hugo, one of the fastest static site generators, building your site in just seconds with a single binary.\nReponsive with Dark Mode Included Looks great on different screen sizes. Built-in dark mode support, with auto-switching based on user\u0026rsquo;s system preference.\nBuild and Host for Free Build with GitHub Actions, and host for free on GitHub Pages. Alternatively it can be hosted on any static hosting service.\nMulti-Language Made Easy Create multi-language pages by just adding locales suffix to the Markdown file. Adding i18n support to your site is intuitive.\nAnd Much More... Syntax highlighting / Table of contents / SEO / RSS / LaTeX / Mermaid / Customizable / and more\u0026hellip;\n"},"title":"Hextra Theme"},"/about/":{"data":{"":"Hextra is designed to be a simple, fast, and flexible theme for building modern static websites. It is especially well-suited for documentation websites but can also be used for various types of sites, such as blogs, portfolios, and more.\nHugo, like Jekyll, is a static site generator. What sets Hugo apart is that it is a single binary, making it easy to install and run on various platforms. It is also extremely fast and reliable, capable of rendering a site with thousands of pages in milliseconds.\nHextra is built with a mindset focused on having a minimal footprint. To get started, no extra dependencies like Node.js packages are required; all you need is a single YAML configuration file, along with your Markdown content. Thus, we can focus on writing quality content instead of setting up tooling.\n","credits#Credits":"Hextra cannot be built without the following tools and inspirations:\nHugo Tailwind CSS Heroicons Nextra Next.js "},"title":"About"},"/docs/":{"data":{"":"üëã Hello! Welcome to the Hextra documentation!\n","features#Features":" Beautiful Design - Inspired by Nextra, Hextra utilizes Tailwind CSS to offer a modern design that makes your site look outstanding. Responsive Layout and Dark Mode - It looks great on all devices, from mobile, tablet to desktop. Dark mode is also supported to accomodate various lighting conditions. Fast and Lightweight - Powered by Hugo, a lightning-fast static-site generator housed in a single binary file, Hextra keeps its footprint minimal. No Javascript or Node.js are needed to use it. Full-text Search - Built-in offline full-text search powered by FlexSearch, no additional configuration required. Battery-included - Markdown, syntax highlighting, LaTeX math formulae, diagrams and Shortcodes elements to enhance your content. Table of contents, breadcumbs, pagination, sidebar navigation and more are all automatically generated. Multi-language and SEO Ready - Multi-language sites made easy with Hugo\u0026rsquo;s multilingual mode. Out-of-the-box support is included for SEO tags, Open Graph, and Twitter Cards. ","next#Next":"Dive right into the following section to get started:\nGetting StartedLearn how to create website using Hextra ","questions-or-feedback#Questions or Feedback?":" ‚ùì Hextra is still in active development. Have a question or feedback? Feel free to open an issue! ","what-is-hextra#What is Hextra?":"Hextra is a modern, fast and batteries-included [Hugo][hugo] theme built with [Tailwind CSS][tailwind-css].\nDesigned for building beautiful websites for documentation, blogs and websites, it provides out-of-the-box features and flexibility to meet various requirements."},"title":"Documentation"},"/docs/advanced/":{"data":{"":"This section covers some advanced topics of the theme.\nMulti-language Customization Comments System "},"title":"Advanced"},"/docs/advanced/comments/":{"data":{"":"Hextra supports adding comments system to your site. Currently giscus is supported.\n","giscus#giscus":"giscus is a comments system powered by GitHub Discussions. It is free and open source.\nTo enable giscus, you need to add the following to the site configuration file:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u0026lt;repository\u0026gt; repoId: \u0026lt;repository ID\u0026gt; category: \u0026lt;category\u0026gt; categoryId: \u0026lt;category ID\u0026gt; The giscus configurations can be constructed from the giscus.app website. More details can also be found there.\nComments can be enabled or disabled for a specific page in the page front matter:\ncontent/docs/about.md--- title: About comments: true --- "},"title":"Comments"},"/docs/advanced/customization/":{"data":{"":"Hextra offers some default customization options in the hugo.yaml config file to configure the theme. This page describes the available options and how to customize the theme further.\n","custom-css#Custom CSS":"To add custom CSS, we need to create a file assets/css/custom.css in our site. Hextra will automatically load this file.\nFont Family The font family of the content can be customized using:\nassets/css/custom.css.content { font-family: \u0026#34;Times New Roman\u0026#34;, Times, serif; } Inline Code Element The color of text mixed with other text can customized with:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; } Primary Color The primary color of the theme can be customized by setting the --primary-hue and --primary-saturation variables:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; } Syntax Highlighting List of available syntax highlighting themes are available at Chroma Styles Gallery. The stylesheet can be generated using the command:\n$ hugo gen chromastyles --style=github To override the default syntax highlighting theme, we can add the generated styles to the custom CSS file.\n","custom-layouts#Custom Layouts":"The layouts of the theme can be overridden by creating a file with the same name in the layouts directory of your site. For example, to override the single.html layout for docs, create a file layouts/docs/single.html in your site.\nFor further information, refer to the Hugo Templates.\n","custom-scripts#Custom Scripts":"You may add custom scripts to the end of the head for every page by adding the following file:\nlayouts/partials/custom/head-end.html ","further-customization#Further Customization":"Didn\u0026rsquo;t find what you were looking for? Feel free to open an issue or make a contribution to the theme!"},"title":"Customization"},"/docs/advanced/multi-language/":{"data":{"":"Hextra supports creating site with multiple languages using Hugo\u0026rsquo;s multilingual mode.\n","enable-multi-language#Enable Multi-language":"To make our site multi-language, we need to tell Hugo the supported languages. We need to add to the site configuration file:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Fran√ßais weight: 2 ja: languageName: Êó•Êú¨Ë™û weight: 3 ","manage-translations-by-filename#Manage Translations by Filename":"Hugo supports managing translations by filename. For example, if we have a file content/docs/_index.md in English, we can create a file content/docs/_index.fr.md for French translation.\ncontent docs _index.md _index.fr.md _index.ja.md Note: Hugo also supports Translation by content directory.\n","read-more#Read More":" Hugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization ","translate-menu-items#Translate Menu Items":"To translate menu items in the navigation bar, we need to set the identifier field:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2 and translate them in the corresponding i18n file:\ni18n/fr.yamldocumentation: Documentation blog: Blog ","translate-strings#Translate Strings":"To translate strings on the other places, we need to add the translation to the corresponding i18n file:\ni18n/fr.yamlreadMore: Lire la suite A list of strings used in the theme can be found in the i18n/en.yaml file.\n"},"title":"Multi-language"},"/docs/getting-started/":{"data":{"":"","next#Next":"Explore the following sections to start adding more contents:\nOrganize Files Configuration Markdown ","quick-start-from-template#Quick Start from Template":" imfing/hextra-starter-template\nYou will be able to quickly get started by using the above template repository.\nWe have provided a GitHub Actions workflow which can help automatically build and deploy your site to GitHub Pages, and host it for free.\nüåê Demo ‚Üó\n","start-as-new-project#Start as New Project":"Prerequisites Before we start, make sure we have Hugo installed. Please refer to Hugo\u0026rsquo;s official installation guide for more details.\nHugo modules are the recommended way to manage Hugo themes. To use Hugo modules, we need to install Git and Go.\nInitialize a new Hugo site $ hugo new site my-site --format=yaml Configure Hextra theme via module # initialize hugo module $ cd my-site $ hugo mod init github.com/username/my-site # add Hextra theme $ hugo mod get github.com/imfing/hextra Edit hugo.yaml to enable Hextra theme:\nmodule: imports: - path: github.com/imfing/hextra Create your first content pages Let\u0026rsquo;s create a new content page for the home page and the documentation page:\n$ hugo new content/_index.md $ hugo new content/docs/_index.md Preview the site locally $ hugo server --buildDrafts --disableFastRender Voila! You can see your new site at http://localhost:1313/.\n","update-theme#Update Theme":" How to update theme? To update the theme to the latest released version, run the following command:\n$ hugo mod get -u See Hugo Modules for more details.\n"},"title":"Getting Started"},"/docs/guide/":{"data":{"":"Explore the following sections to learn to compose content using Hextra:\nOrganize Files Configuration Markdown Syntax Highlighting LaTeX Diagrams Shortcodes "},"title":"Guide"},"/docs/guide/configuration/":{"data":{"":"Hugo reads its configuration from hugo.yaml in the root of your Hugo site. The config file is where you can configure all aspects of your site. You can find the config file for this site in exampleSite/hugo.yaml as a good starting point.\n","footer#Footer":"Copyright To modify the copyright text displayed in your website\u0026rsquo;s footer, you\u0026rsquo;ll need to create a file named i18n/en.yaml. In this file, specify your new copyright text as shown below:\ni18n/en.yamlcopyright: \u0026#34;¬© 2023 YOUR TEXT HERE\u0026#34; For your reference, an example i18n/en.yaml file can be found in the GitHub repository. Additionally, you could use Markdown format in the copyright text.\n","navigation#Navigation":"Menu Top right menu is defined under the menu.main section in the config file:\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \u0026#34;https://github.com/imfing/hextra\u0026#34; params: icon: github There are different types of menu items:\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs Link to an external URL with url - name: GitHub url: \u0026#34;https://github.com\u0026#34; Search bar with type: search - name: Search params: type: search Icon - name: GitHub params: icon: github These menu items can be sorted by setting the weight parameter.\nLogo and Title To modify the default logo, edit hugo.yaml and add the path to your logo file under static directory. Optionally, you can change the link that users are redirected to when clicking on your logo, as well as set the width \u0026amp; height of the logo in pixels.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20 ","others#Others":"Favicon To customize the favicon for your site, place icon files under the static folder to override the default favicons from the theme:\nstatic android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon-dark.svg favicon.ico favicon.svg site.webmanifest Include both favicon.ico and favicon.svg files in your project to ensure your site\u0026rsquo;s favicons display correctly.\nWhile favicon.ico is generally for older browsers, favicon.svg is supported by modern ones. The optional favicon-dark.svg can be included for a tailored experience in dark mode. Feel free to use tools like favicon.io or favycon to generate these icons.\nPage Width The width of the page can be customized by the params.page.width parameter in the config file:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide There are three available options: full, wide, and normal. By default, the page width is set to normal.\nSimilarly, the width of the navbar and footer can be customized by the params.navbar.width and params.footer.width parameters.\nGoogle Analytics To enable Google Analytics, set the googleAnalytics parameter in the config file:\nhugo.yamlgoogleAnalytics: G-XXXXXXXXXX ","right-sidebar#Right Sidebar":"Table of Contents Table of contents is automatically generated from the headings in the content file. It can be disabled by setting toc: false in the front matter of the page.\ncontent/docs/guide/configuration.md--- title: Configuration toc: false --- Page Edit Link To configure the page edit link, we can set the params.editURL.base parameter in the config file:\nhugo.yamlparams: editURL: base: \u0026#34;https://github.com/your-username/your-repo/edit/main\u0026#34; The edit links will be automatically generated for each page. If you want to set edit link for a specific page, you can set the params.editURL parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration params: editURL: \u0026#34;https://example.com/edit/this/page\u0026#34; --- ","sidebar#Sidebar":"Main Sidebar For the main sidebar, it is automatically generated from the structure of the content directory. See the Organize Files page for more details.\nExtra Links Sidebar extra links are defined under the menu.sidebar section in the config file:\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \u0026#34;About\u0026#34; pageRef: \u0026#34;/about\u0026#34; weight: 2 - name: \u0026#34;Hugo Docs ‚Üó\u0026#34; url: \u0026#34;https://gohugo.io/documentation/\u0026#34; weight: 3 "},"title":"Configuration"},"/docs/guide/diagrams/":{"data":{"":"Currently, Hextra supports Mermaid for diagrams.\n","mermaid#Mermaid":"Mermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser. For example, Mermaid can render flow charts, sequence diagrams, pie charts and more.\nUsing Mermaid in Hextra is as simple as writing a code block with language set mermaid:\n```mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ``` will be rendered as:\ngraph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD;Sequence diagram:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good!For more information, please refer to Mermaid Documentation.\n"},"title":"Diagrams"},"/docs/guide/latex/":{"data":{"":"$\\KaTeX$ is used for rendering LaTeX math expressions. It can be enabled per page by setting math to true in the page front matter.\nMarkdown--- title: \u0026#34;My Page with LaTeX\u0026#34; math: true --- When enabled, the scripts, stylesheets and fonts from KaTeX will be included automatically in your site. You can start using LaTeX math expressions in your Markdown content.\n","chemistry#Chemistry":"Chemistry expressions are supported via mhchem extension.\nInline: $\\ce{H2O}$ is water.\nSeparate paragraph:\npage.md$$\\ce{Hg^2+ -\u0026gt;[I-] HgI2 -\u0026gt;[I-] [Hg^{II}I4]^2-}$$ $$\\ce{Hg^2+ -\u0026gt;[I-] HgI2 -\u0026gt;[I-] [Hg^{II}I4]^2-}$$\n","example#Example":"Both inline and separate paragraph LaTeX math expressions are supported in the Markdown content.\nInline page.mdThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline. This $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\nSeparate Paragraph page.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$ will be rendered as:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$\n","supported-functions#Supported Functions":"For a list of supported functions, see KaTeX supported functions."},"title":"LaTeX"},"/docs/guide/markdown/":{"data":{"":"Hugo supports Markdown syntax for formatting text, creating lists, and more. This page will show you some of the most common Markdown syntax examples.\n","configuration#Configuration":"Hugo uses Goldmark for Markdown parsing. Markdown rendering can be configured in hugo.yaml under markup.goldmark. Below is the default configuration for Hextra:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false For more configuration options, see Hugo documentation on Configure Markup.\n","learning-resources#Learning Resources":" Markdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference ","markdown-examples#Markdown Examples":"Styling Text Style Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* `italicized text italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript \u0026lt;sub\u0026gt;\u0026lt;/sub\u0026gt; This is a \u0026lt;sub\u0026gt;subscript\u0026lt;/sub\u0026gt; text This is a subscript text Superscript \u0026lt;sup\u0026gt;\u0026lt;/sup\u0026gt; This is a \u0026lt;sup\u0026gt;superscript\u0026lt;/sup\u0026gt; text This is a superscript text Blockquotes Blockquote with attribution\nDon\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n‚Äî Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Syntax Highlighting Lists Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Images With caption:\nUnsplash Landscape The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},"title":"Markdown"},"/docs/guide/organize-files/":{"data":{"":"","add-images#Add Images":"To add images, the easiest way is to put the image files in the same directory as the Markdown file. For example, add an image file image.png alongside the my-page.md file:\ncontent docs my-page.md image.png Then, we can use the following Markdown syntax to add the image to the content:\ncontent/docs/my-page.md![](image.png) We can also utilize the page bundles feature of Hugo to organize the image files together with the Markdown file. To achieve that, turn the my-page.md file into a directory my-page and put the content into a file named index.md, and put the image files inside the my-page directory:\ncontent docs my-page index.md image.png content/docs/my-page/index.md![](image.png) Alternatively, we can also put the image files in the static directory, which will make the images available for all pages:\nstatic images image.png content docs my-page.md Note that the image path begins with a slash / and is relative to the static directory:\ncontent/docs/my-page.md![](/images/image.png) ","configure-content-directory#Configure Content Directory":"If we need to use a different directory for our content, we can do so by setting the contentDir parameter in our site configuration file.","directory-structure#Directory Structure":"By default, Hugo searches for Markdown files in the content directory, and the structure of the directory determines the final output structure of your website. Take the example site as an example:\ncontent _index.md docs _index.md getting-started.md guide _index.md organize-files.md blog _index.md post-1.md Each of the _index.md files is the index page for the corresponding section. The other Markdown files are regular pages.\ncontent ‚îú‚îÄ‚îÄ _index.md // \u0026lt;- / ‚îú‚îÄ‚îÄ docs ‚îÇ ‚îú‚îÄ‚îÄ _index.md // \u0026lt;- /docs/ ‚îÇ ‚îú‚îÄ‚îÄ getting-started.md // \u0026lt;- /docs/getting-started/ ‚îÇ ‚îî‚îÄ‚îÄ guide ‚îÇ ‚îú‚îÄ‚îÄ _index.md // \u0026lt;- /docs/guide/ ‚îÇ ‚îî‚îÄ‚îÄ organize-files.md // \u0026lt;- /docs/guide/organize-files/ ‚îî‚îÄ‚îÄ blog ‚îú‚îÄ‚îÄ _index.md // \u0026lt;- /blog/ ‚îî‚îÄ‚îÄ post-1.md // \u0026lt;- /blog/post-1/ ","sidebar-navigation#Sidebar Navigation":"The sidebar navigation is generated automatically based on the content organization alphabetically. To manually configure the sidebar order, we can use the weight parameter in the front matter of the Markdown files.\ncontent/docs/guide/_index.md--- title: Guide weight: 2 --- ‚ÑπÔ∏è It is recommended to keep the sidebar not too deep. If you have a lot of content, consider splitting them into multiple sections. "},"title":"Organize Files"},"/docs/guide/shortcodes/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout Cards Details FileTree Icon Steps Tabs "},"title":"Shortcodes"},"/docs/guide/shortcodes/callout/":{"data":{"":"A built-in component to show important information to the reader.\n","example#Example":" üëæ A callout is a short piece of text intended to attract attention. ‚ÑπÔ∏è A callout is a short piece of text intended to attract attention. ‚ö†Ô∏è A callout is a short piece of text intended to attract attention. üö´ A callout is a short piece of text intended to attract attention. ","usage#Usage":"Default üåê Hugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more. {{\u0026lt; callout emoji=\u0026#34;üåê\u0026#34; \u0026gt;}} Hugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more. {{\u0026lt; /callout \u0026gt;}} Info ‚ÑπÔ∏è Please visit GitHub to see the latest releases. {{\u0026lt; callout type=\u0026#34;info\u0026#34; \u0026gt;}} Please visit GitHub to see the latest releases. {{\u0026lt; /callout \u0026gt;}} Warning ‚ö†Ô∏è This API will be deprecated in the next version. {{\u0026lt; callout type=\u0026#34;warning\u0026#34; \u0026gt;}} A **callout** is a short piece of text intended to attract attention. {{\u0026lt; /callout \u0026gt;}} Error üö´ Something went wrong and it\u0026rsquo;s going to explode. {{\u0026lt; callout type=\u0026#34;error\u0026#34; \u0026gt;}} Something went wrong and it\u0026#39;s going to explode. {{\u0026lt; /callout \u0026gt;}} "},"title":"Callout"},"/docs/guide/shortcodes/cards/":{"data":{"":"","card-parameters#Card Parameters":" Parameter Description link URL (internal or external). title Title heading for the card. subtitle Subtitle heading (supports Markdown). icon Name of the icon. ","example#Example":" Callout No Icon Image CardUnsplash Landscape Local ImageRaw image under static directory. Local ImageImage under assets directory, processed by Hugo. ","image-card#Image Card":"Additionally, the card supports adding image and processing through these parameters:\nParameter Description image Specifies the image URL for the card. method Sets Hugo\u0026rsquo;s image processing method. options Configures Hugo\u0026rsquo;s image processing options. Card supports three kinds of images:\nRemote image: the full URL in the image parameter. Static image: use the relative path in Hugo\u0026rsquo;s static/ directory. Processed image: use the relative path in Hugo\u0026rsquo;s assets/ directory. Hextra auto-detects if image processing is needed during build and applies the options parameter or default settings (Resize, 800x, Quality 80, WebP Format). It currently supports these method: Resize, Fit, Fill and Crop.\nFor more on Hugo\u0026rsquo;s built in image processing commands, methods, and options see their Image Processing Documentation.\n","usage#Usage":"{{\u0026lt;/* cards */\u0026gt;}} {{\u0026lt;/* card link=\u0026#34;../callout\u0026#34; title=\u0026#34;Callout\u0026#34; icon=\u0026#34;warning\u0026#34; */\u0026gt;}} {{\u0026lt;/* card link=\u0026#34;/\u0026#34; title=\u0026#34;No Icon\u0026#34; */\u0026gt;}} {{\u0026lt;/* /cards */\u0026gt;}} {{\u0026lt;/* cards */\u0026gt;}} {{\u0026lt;/* card link=\u0026#34;/\u0026#34; title=\u0026#34;Image Card\u0026#34; image=\u0026#34;https://source.unsplash.com/featured/800x600?landscape\u0026#34; subtitle=\u0026#34;Unsplash Landscape\u0026#34; */\u0026gt;}} {{\u0026lt;/* card link=\u0026#34;/\u0026#34; title=\u0026#34;Local Image\u0026#34; image=\u0026#34;/images/card-image-unprocessed.jpg\u0026#34; subtitle=\u0026#34;Raw image under static directory.\u0026#34; */\u0026gt;}} {{\u0026lt;/* card link=\u0026#34;/\u0026#34; title=\u0026#34;Local Image\u0026#34; image=\u0026#34;images/space.jpg\u0026#34; subtitle=\u0026#34;Image under assets directory, processed by Hugo.\u0026#34; method=\u0026#34;Resize\u0026#34; options=\u0026#34;600x q80 webp\u0026#34; */\u0026gt;}} {{\u0026lt;/* /cards */\u0026gt;}} "},"title":"Cards"},"/docs/guide/shortcodes/details/":{"data":{"":"A built-in component to display a collapsible content.\n","example#Example":" Details This is the content of the details.\nMarkdown is supported.\nClick me to reveal This will be hidden by default. ","usage#Usage":"{{%/* details title=\u0026#34;Details\u0026#34; */%}} This is the content of the details. Markdown is **supported**. {{%/* /details */%}} {{%/* details title=\u0026#34;Click me to reveal\u0026#34; closed=\u0026#34;true\u0026#34; */%}} This will be hidden by default. {{%/* /details */%}} "},"title":"Details"},"/docs/guide/shortcodes/filetree/":{"data":{"":"","example#Example":" content _index.md docs _index.md introduction.md introduction.fr.md hugo.toml ","usage#Usage":"Markdown{{\u0026lt;/* filetree/container */\u0026gt;}} {{\u0026lt;/* filetree/folder name=\u0026#34;content\u0026#34; */\u0026gt;}} {{\u0026lt;/* filetree/file name=\u0026#34;_index.md\u0026#34; */\u0026gt;}} {{\u0026lt;/* filetree/folder name=\u0026#34;docs\u0026#34; state=\u0026#34;closed\u0026#34; */\u0026gt;}} {{\u0026lt;/* filetree/file name=\u0026#34;_index.md\u0026#34; */\u0026gt;}} {{\u0026lt;/* filetree/file name=\u0026#34;introduction.md\u0026#34; */\u0026gt;}} {{\u0026lt;/* filetree/file name=\u0026#34;introduction.fr.md\u0026#34; */\u0026gt;}} {{\u0026lt;/* /filetree/folder */\u0026gt;}} {{\u0026lt;/* /filetree/folder */\u0026gt;}} {{\u0026lt;/* filetree/file name=\u0026#34;hugo.toml\u0026#34; */\u0026gt;}} {{\u0026lt;/* /filetree/container */\u0026gt;}} "},"title":"FileTree"},"/docs/guide/shortcodes/icon/":{"data":{"":"To use this shortcode inline, inline shortcode needs to be enabled in the config:\nhugo.yamlenableInlineShortcodes: true The list of available icons can be found in data/icons.yaml.\n","example#Example":" ","usage#Usage":"{{\u0026lt;/* icon \u0026#34;github\u0026#34; */\u0026gt;}} Heroicons v1 outline icons are available out of the box.\nYou can also add your own icons by adding them to data/icon.yaml:\ndata/icon.yamlyour-icon: \u0026lt;svg\u0026gt;your icon svg content\u0026lt;/svg\u0026gt; which can then be used like this:\n{{\u0026lt;/* icon \u0026#34;your-icon\u0026#34; */\u0026gt;}} "},"title":"Icon"},"/docs/guide/shortcodes/steps/":{"data":{"":"A built-in component to display a series of steps.","example#Example":" Step 1 This is the first step.\nStep 2 This is the second step.\nStep 3 This is the third step.\n","usage#Usage":"Put Markdown h3 header within steps shortcode.\n{{%/* steps */%}} ### Step 1 This is the first step. ### Step 2 This is the second step. {{%/* /steps */%}} "},"title":"Steps"},"/docs/guide/shortcodes/tabs/":{"data":{"":"","example#Example":"JSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that\u0026rsquo;s easy to read due to obvious semantics. ","usage#Usage":"Default {{\u0026lt; tabs items=\u0026#34;JSON,YAML,TOML\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026gt;}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026gt;}}**YAML**: YAML is a human-readable data serialization language.{{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026gt;}}**TOML**: TOML aims to be a minimal configuration file format that\u0026#39;s easy to read due to obvious semantics.{{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Specify Selected Index Use defaultIndex property to specify the selected tab. The index starts from 0.\n{{\u0026lt; tabs items=\u0026#34;JSON,YAML,TOML\u0026#34; defaultIndex=\u0026#34;1\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026gt;}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026gt;}}**YAML**: YAML is a human-readable data serialization language.{{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026gt;}}**TOML**: TOML aims to be a minimal configuration file format that\u0026#39;s easy to read due to obvious semantics.{{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} The YAML tab will be selected by default.\nJSONYAMLTOML JSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. YAML: YAML is a human-readable data serialization language. TOML: TOML aims to be a minimal configuration file format that\u0026rsquo;s easy to read due to obvious semantics. Use Markdown Markdown syntax including code block is also supported:\n{{\u0026lt; tabs items=\u0026#34;JSON,YAML,TOML\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026gt;}} ```json { \u0026#34;hello\u0026#34;: \u0026#34;world\u0026#34; } ``` {{\u0026lt; /tab \u0026gt;}} ... add other tabs similarly {{\u0026lt; /tabs \u0026gt;}} JSONYAMLTOML { \u0026#34;hello\u0026#34;: \u0026#34;world\u0026#34; } hello: world hello = \u0026#34;world\u0026#34; "},"title":"Tabs"},"/docs/guide/syntax-highlighting/":{"data":{"":"Hugo uses Chroma, a general purpose syntax highlighter in pure Go, for syntax highlighting. It is recommended to use backticks for code blocks in Markdown content. For example:\nMarkdown```python def say_hello(): print(\u0026#34;Hello!\u0026#34;) ``` will be rendered as:\ndef say_hello(): print(\u0026#34;Hello!\u0026#34;) ","features#Features":"Filename To add a filename or title to the code block, set attribute filename:\nMarkdown```python {filename=\u0026#34;hello.py\u0026#34;} def say_hello(): print(\u0026#34;Hello!\u0026#34;) ``` hello.pydef say_hello(): print(\u0026#34;Hello!\u0026#34;) Line Numbers To set line numbers, set attribute linenos to table and optionally set linenostart to the starting line number:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\u0026#34;Hello!\u0026#34;) ``` 42 43 def say_hello(): print(\u0026#34;Hello!\u0026#34;) Highlighting Lines To highlight lines, set attribute hl_lines to a list of line numbers:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\u0026#34;hello.py\u0026#34;} def say_hello(): print(\u0026#34;Hello!\u0026#34;) def main(): say_hello() ``` hello.py 1 2 3 4 5 def say_hello(): print(\u0026#34;Hello!\u0026#34;) def main(): say_hello() Copy Button By default, copy button is enabled for code blocks.\n","supported-languages#Supported Languages":"For a list of supported languages, please see Chroma\u0026rsquo;s documentation."},"title":"Syntax Highlighting"},"/showcase/":{"data":{"":" Open source projects powered by Hextra. Porter LutheranConfessions Hextra Starter Template "},"title":"Showcase"}}